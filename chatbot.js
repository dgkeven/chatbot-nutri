const express = require('express');
const qrcode = require('qrcode');
const { default: makeWASocket, useMultiFileAuthState, DisconnectReason } = require('@adiwajshing/baileys');

const app = express();
const PORT = process.env.PORT || 3000;

let qrCodeString = null;

app.get('/', (req, res) => {
    res.send('Bot WhatsApp rodando!');
});

// Nova rota para visualizar o QR Code como imagem
app.get('/qrcode', async (req, res) => {
    if (!qrCodeString) {
        return res.send('QR Code ainda n√£o gerado. Aguarde o bot inicializar.');
    }

    try {
        const qrImage = await qrcode.toDataURL(qrCodeString);
        const html = `
            <html>
                <body style="text-align:center; font-family:sans-serif">
                    <h2>Escaneie o QR Code abaixo para autenticar no WhatsApp</h2>
                    <img src="${qrImage}" />
                </body>
            </html>
        `;
        res.send(html);
    } catch (err) {
        res.status(500).send('Erro ao gerar imagem do QR Code');
    }
});

app.listen(PORT, () => {
    console.log(`Servidor HTTP rodando na porta ${PORT}`);
});

const agendamentos = {};
const atendimentoManual = {};
const interessadosGrupo = [];

async function startBot() {
    const { state, saveCreds } = await useMultiFileAuthState('auth_info');

    const sock = makeWASocket({
        printQRInTerminal: true,
        auth: state
    });

    sock.ev.on('creds.update', saveCreds);

    sock.ev.on('connection.update', (update) => {
        const { connection, lastDisconnect, qr } = update;

        if (qr) {
            qrCodeString = qr;
            console.log('QR Code recebido, escaneie no WhatsApp:');
            qrcode.generate(qr, { small: true });
        }

        if (connection === 'close') {
            const reason = (lastDisconnect.error)?.output?.statusCode;
            console.log('Conex√£o fechada, c√≥digo:', reason);
            if (reason !== DisconnectReason.loggedOut) {
                startBot();
            }
        } else if (connection === 'open') {
            console.log('Bot est√° pronto!');
        }
    });

    sock.ev.on('messages.upsert', async (m) => {
        const msg = m.messages[0];
        if (!msg.message?.conversation) return;

        const chatId = msg.key.remoteJid;
        const texto = msg.message.conversation.trim().toLowerCase();

        // Ignora grupos
        if (chatId.includes('@g.us')) return;

        // Comando "encerrar"
        if (texto === 'encerrar') {
            if (atendimentoManual[chatId]) {
                delete atendimentoManual[chatId];
                await sock.sendMessage(chatId, { text: '‚úÖ Atendimento autom√°tico reativado. Conte comigo!' });
            } else {
                await sock.sendMessage(chatId, { text: '‚ö†Ô∏è Voc√™ n√£o est√° em atendimento manual. Envie "manual" para desativar o rob√¥.' });
            }
            return;
        }

        // Comando "manual"
        if (texto === 'manual') {
            atendimentoManual[chatId] = true;
            await sock.sendMessage(chatId, { text: 'ü§ñ Atendimento autom√°tico desativado. Agora est√° em modo manual.' });
            return;
        }

        // Se estiver em atendimento manual, ignora mensagem
        if (atendimentoManual[chatId]) {
            console.log(`Usu√°rio ${chatId} est√° em modo manual. Ignorando mensagem.`);
            return;
        }

        if (!agendamentos[chatId]) {
            agendamentos[chatId] = { etapa: 0 };
        }

        const etapa = agendamentos[chatId].etapa;

        if (texto === 'cancelar') {
            delete agendamentos[chatId];
            return sock.sendMessage(chatId, { text: 'Atendimento cancelado. Se precisar de algo, estou √† disposi√ß√£o!' });
        }

        switch (etapa) {
            case 0:
                await sock.sendMessage(chatId, {
                    text: `Ol√°! üëã Bem-vinda! Como posso te ajudar hoje?
    
1 - Agendar consulta nutricional  
2 - Saber mais sobre o Grupo Metamorfose  
3 - Tira d√∫vidas ou envio de exames  

‚ùå Envie "cancelar" a qualquer momento para encerrar o atendimento.` });
                agendamentos[chatId].etapa = 1;
                break;

            case 1:
                if (texto === '1') {
                    await sock.sendMessage(chatId, {
                        text: `Ol√°! Meu nome √© Priscilla Dalbem, sou nutricionista h√° 13 anos, especializada em Nutri√ß√£o Esportiva, Sa√∫de da Mulher, Fitoterapia e Gastronomia Aplicada √† Nutri√ß√£o.

Meu acompanhamento tem dura√ß√£o m√©dia de 50 minutos, onde realizo uma anamnese completa para entender sua rotina, prefer√™ncias e objetivos. Tamb√©m solicito exames de sangue para avaliar poss√≠veis car√™ncias nutricionais ou altera√ß√µes hormonais. Al√©m disso, fa√ßo uma avalia√ß√£o f√≠sica detalhada, incluindo peso, altura, bioimped√¢ncia, dobras cut√¢neas e circunfer√™ncias, para calcular seu percentual de gordura e massa muscular.
    
Com base nesses dados, elaboro seu plano alimentar personalizado, que √© entregue em at√© 3 dias, juntamente com materiais complementares como receitas, lista de compras e checklist de automonitoramento. Ofere√ßo suporte via WhatsApp para d√∫vidas e dificuldades, e os retornos s√£o geralmente a cada 45 ou 60 dias, conforme necessidade.
    
O valor da consulta √© R$ 280,00, sem direito a retorno.
    
Caso tenha interesse, posso verificar um hor√°rio para voc√™. üòä
    
Por favor, informe sua disponibilidade de dia e hor√°rio. Atendo de segunda a quinta-feira, das 08:00 √†s 11:00 e das 14:00 √†s 18:00.` });
                    agendamentos[chatId].etapa = 2;
                } else if (texto === '2') {
                    interessadosGrupo.push({
                        nome: msg.pushName || 'Desconhecido',
                        numero: chatId
                    });

                    const mensagemGrupo = `üå∏ *Grupo Metamorfose ‚Äì Sua transforma√ß√£o come√ßa agora!*

Voc√™, mulher que est√° cansada de dietas restritivas, da culpa ao comer e da press√£o para ter um corpo ‚Äúperfeito‚Äù‚Ä¶ chegou a hora de viver uma nova rela√ß√£o com a comida ‚Äì e com voc√™ mesma.
    
O *Metamorfose* √© um grupo online de emagrecimento com dura√ß√£o de 15 dias, criado especialmente para mulheres que desejam cuidar da sa√∫de, conquistar mais bem-estar e alcan√ßar o emagrecimento de forma leve, consciente e sem terrorismo nutricional.
    
Durante esses dias, eu, Priscilla, nutricionista esportiva com especializa√ß√£o em sa√∫de da mulher, estarei com voc√™ diariamente no WhatsApp, oferecendo:
    
‚Ä¢ Orienta√ß√µes pr√°ticas e acess√≠veis para uma alimenta√ß√£o equilibrada  
‚Ä¢ Dicas e reflex√µes para melhorar sua rela√ß√£o com a comida  
‚Ä¢ Suporte emocional e motivacional  
‚Ä¢ Est√≠mulo ao autocuidado e √† aceita√ß√£o do seu corpo em todas as fases  
    
‚ú® *N√£o √© sobre ‚Äúseguir dieta‚Äù, √© sobre se reconectar com seu corpo e com a sua ess√™ncia. √â sobre transformar de dentro para fora.*
    
üì£ *Vagas limitadas!* Me envie uma mensagem para garantir a sua participa√ß√£o no Grupo Metamorfose!`;

                    await sock.sendMessage(chatId, { text: mensagemGrupo });
                    delete agendamentos[chatId];
                } else if (texto === '3') {
                    await sock.sendMessage(chatId, {
                        text: `üë©‚Äç‚öïÔ∏è Voc√™ pode enviar suas d√∫vidas por aqui ou anexar seus exames diretamente nesta conversa. Assim que poss√≠vel, responderei ou encaminharei para an√°lise. üòä  

‚ùå Envie "cancelar" a qualquer momento para encerrar o atendimento.` });
                    delete agendamentos[chatId];
                }
                break;

            case 2:
                agendamentos[chatId].disponibilidade = msg.message.conversation;
                await sock.sendMessage(chatId, {
                    text: `√ìtimo! Agora, por favor, informe seu principal objetivo com a consulta nutricional:
    
1 - Emagrecimento  
2 - Controle de taxas  
3 - Reeduca√ß√£o alimentar  
4 - Hipertrofia/defini√ß√£o  
5 - Gestante/tentante  
6 - Doen√ßas associadas (Diabetes, Gordura no f√≠gado, SOP, Problemas intestinais, etc).  

‚ùå Envie "cancelar" a qualquer momento para encerrar o atendimento.` });
                agendamentos[chatId].etapa = 3;
                break;

            case 3:
                const objetivos = {
                    '1': 'Emagrecimento',
                    '2': 'Controle de taxas',
                    '3': 'Reeduca√ß√£o alimentar',
                    '4': 'Hipertrofia/defini√ß√£o',
                    '5': 'Gestante/tentante',
                    '6': 'Doen√ßas associadas'
                };

                const escolha = objetivos[texto];

                if (escolha) {
                    agendamentos[chatId].objetivo = escolha;
                    await sock.sendMessage(chatId, { text: `Perfeito! Recebi sua disponibilidade e objetivo: ${escolha}. Em breve entrarei em contato para agendarmos sua consulta. At√© logo! üòä` });
                    delete agendamentos[chatId];
                } else {
                    await sock.sendMessage(chatId, { text: 'Op√ß√£o inv√°lida. Por favor, escolha uma das op√ß√µes listadas. ‚ùå Envie "cancelar" a qualquer momento para encerrar o atendimento.' });
                }
                break;
        }

        // Verifica se a pessoa respondeu "tenho interesse" sobre o grupo Metamorfose
        if (texto === 'tenho interesse') {
            const nome = msg.pushName || 'Desconhecido';

            // Evita duplicidade
            if (!interessadosGrupo.some(i => i.numero === chatId)) {
                interessadosGrupo.push({
                    nome,
                    numero: chatId
                });
            }

            await sock.sendMessage(chatId, { text: `ü•∞ Que bom saber do seu interesse, ${nome}! Assim que eu tiver uma nova data para o pr√≥ximo Grupo Metamorfose, entrarei em contato com voc√™. At√© breve! üíï` });
            return;
        }
    });
}

startBot();
